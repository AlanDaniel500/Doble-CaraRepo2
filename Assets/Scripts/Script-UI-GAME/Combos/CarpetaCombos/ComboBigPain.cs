using System.Collections.Generic;
using UnityEngine;
using CardSystem;

public class ComboBigPain : MonoBehaviour, ICombo, IComboConEfecto
{
    public string Nombre => "Gran Dolor";

    [SerializeField] private int prioridad = 6; // Editable desde el inspector

    [SerializeField] private AudioClip comboSFX; 
    public int Prioridad => prioridad;

    [SerializeField] private int da침oBase = 75;

    private int ultimoDa침oCalculado; // Para usarlo en AplicarEfecto

    public bool CheckCombo(List<CardData> cartas)
    {
        int sangreCount = 0;

        foreach (var carta in cartas)
        {
            if (carta.cardType == CardData.CardType.Sangre)
                sangreCount++;
        }

        return sangreCount >= 4;
    }

    public void PlaySFX()
    {
        if (comboSFX != null && AudioManager.Instance != null)
        {
            AudioManager.Instance.PlaySFX("Gran dolor");
        }
        else
        {
            Debug.LogWarning("Falta el sonido o AudioManager para el combo: " + Nombre);
        }
    }

    public int CalcularDa침o(List<CardData> cartas)
    {
        int sumaValores = 0;

        foreach (var carta in cartas)
        {
            sumaValores += carta.cardNumber;
        }

        int totalDa침o = da침oBase + sumaValores;
        ultimoDa침oCalculado = totalDa침o; // Lo guardamos para usarlo luego en el efecto

        Debug.Log($"Combo Gran Dolor activado 游뽖 Da침o base: {da침oBase} + suma cartas: {sumaValores} = {totalDa침o}");

        return totalDa침o;
    }

    // Cambi칠 para recibir Player como par치metro
    public void AplicarEfecto(List<CardData> cartas, Player player)
    {
        if (player != null)
        {
            player.Curar(ultimoDa침oCalculado);
            Debug.Log($"Robo de vida: se cur칩 {ultimoDa침oCalculado} puntos 游눌");
        }
        else
        {
            Debug.LogWarning("Player es null en AplicarEfecto de ComboBigPain");
        }
    }
}
